{"version":3,"sources":["App.js","index.js"],"names":["Chart","data","useState","timeData","setTimeData","clusterList","setClusterList","windowSize","setWindowSize","lockTag","setLockTag","margin","width","height","xScale","d3","domain","item","x","range","yScale","y","line","getTime","Date","time","colorScale","ticks","length","className","id","type","placeholder","onChange","e","target","value","viewBox","transform","fill","stroke","d","map","i","date","key","onClick","same_clustering","console","log","onMouseEnter","onMouseLeave","r","opacity","getFullYear","getMonth","toString","padStart","getDate","getHours","dominantBaseline","fontSize","AllWordPlot","allWord","setAllWord","useEffect","fetch","then","response","json","contentWidth","nice","contentHeight","size","Math","count","force","radius","strength","iterations","on","s","xMin","xMax","yMin","yMax","lMax","max","cx","cy","tick","stop","circleSize","circleScale","circleOpacity","word","color","textAnchor","WordPlot","words","setWords","cDate","chackTime","startDate","endDate","jsonUrl","year","month","day","newDate","hour","formatJsonUrl","substring","urls","push","d1","d2","requests","url","Promise","all","dateItems","total_count","newWords","JSON","stringify","App","setData","render","document","querySelector"],"mappings":"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","file":"static/js/main.c5b02698.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport * as d3 from \"d3\";\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetch(\"twi_time_coordinate_200_w8_ws20_with_clustering.json\")\n      // fetch(\"test.json\")\n      .then((response) => response.json())\n      // .then((text) => // // console.log(text));\n      .then((data) => {\n        // // console.log(data);\n        setData(data);\n      });\n  }, []);\n\n  return (\n    <div>\n      <section className=\"hero is-primary\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">hello</h1>\n            <h2 className=\"subtitle\">hello</h2>\n          </div>\n        </div>\n      </section>\n      {/* <section className=\"section\"> */}\n      {/* <div className=\"container max-width\"> */}\n      <Chart data={data} />\n      {/* </div> */}\n      {/* </section> */}\n      <footer className=\"footer\">\n        <div className=\"content has-text-centered\">\n          <p>&copy;2020 xiaotiandong</p>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nconst Chart = ({ data }) => {\n  const [timeData, setTimeData] = useState([]);\n  // // // console.log(timeData);\n  const [clusterList, setClusterList] = useState([]);\n\n  const [windowSize, setWindowSize] = useState([]);\n\n  const [lockTag, setLockTag] = useState(false);\n\n  const contentWidth = 800;\n  const contentHeight = 800;\n  const margin = { left: 20, right: 20, top: 20, bottom: 70 };\n  const width = margin.left + margin.right + contentWidth;\n  const height = margin.top + margin.bottom + contentHeight;\n  const xScale = d3\n    .scaleLinear()\n    .domain(d3.extent(data, (item) => item.x))\n    .range([0, contentWidth]);\n  const yScale = d3\n    .scaleLinear()\n    .domain(d3.extent(data, (item) => item.y))\n    .range([contentHeight, 0]);\n  const line = d3\n    .line()\n    .x((item) => xScale(item.x))\n    .y((item) => yScale(item.y));\n  const getTime = (item) => {\n    const date = new Date(item.time);\n    return date.getTime();\n  };\n  const colorScale = d3\n    .scaleSequential(d3.interpolateCool)\n    .domain(d3.extent(data, getTime));\n\n  // // // console.log(colorScale.ticks());\n  if (colorScale.ticks().length !== 0) {\n    // // console.log(colorScale.ticks());\n  }\n\n  return (\n    <div className=\"container max-width\">\n      <section className=\"section is-fullwidth\">\n        <div className=\"container max-width\">\n          {/* <nav className=\"panel\"> */}\n          {/* <div className=\"panel-block\"> */}\n          <p className=\"control\">\n            <input\n              id=\"windowSize\"\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Window size, defult 5.\"\n              // value=\"3\"\n              // defaultValue=\"5\"\n              onChange={(e) => {\n                // // console.log(\"e = \" + e.target.value);\n                setLockTag(false);\n                setWindowSize(e.target.value);\n                // // console.log(\"windowSize = \" + windowSize);\n              }}\n            />\n          </p>\n          {/* </div> */}\n          {/* </nav> */}\n        </div>\n      </section>\n      <div className=\"container max-width\">\n        <div className=\"columns\">\n          <div className=\"column is-two-fifths\">\n            <div className=\"container has-text-centered\">\n              <h3 className=\"title is-4\">twi_time_coordinate_200_w8_ws20</h3>\n            </div>\n            <div className=\"box\">\n              <svg viewBox={`0 0 ${width} ${height}`}>\n                <g transform={`translate(${margin.left}, ${margin.top})`}>\n                  <g>\n                    <path fill=\"none\" stroke=\"lightgray\" d={line(data)} />\n                  </g>\n                  <g>\n                    {data.map((item, i) => {\n                      // // console.log(\"before: \" + item.time);\n                      const date = new Date(item.time);\n                      // // // console.log(\"after: \" + date);\n                      // // // console.log(item.time);\n\n                      return (\n                        <g\n                          key={i}\n                          transform={`translate(${xScale(item.x)}, ${yScale(\n                            item.y\n                          )})`}\n                          onClick={() => {\n                            var timeData = item.time;\n                            // console.log(timeData);\n                            setTimeData(timeData);\n\n                            var clusterList = item.same_clustering;\n\n                            // console.log(\"clusterList = \" + clusterList);\n                            setClusterList(clusterList);\n                            // console.log(\"windowSize = \" + windowSize);\n                            setLockTag(true);\n                            console.log(lockTag);\n                          }}\n                          onMouseEnter={() => {\n                            if (lockTag === false) {\n                              console.log(lockTag);\n                              var timeData = item.time;\n                              // console.log(timeData);\n                              setTimeData(timeData);\n\n                              var clusterList = item.same_clustering;\n                              console.log(\"item = \" + item);\n                              // console.log(\"clusterList = \" + clusterList);\n                              setClusterList(clusterList);\n                              // console.log(\"windowSize = \" + windowSize);\n                            }\n                          }}\n                          onMouseLeave={() => {\n                            if (lockTag === false) {\n                              console.log(lockTag);\n                              var timeData = new Date();\n                              // console.log(timeData);\n                              setTimeData(timeData);\n                            }\n                          }}\n                        >\n                          <circle\n                            r=\"3\"\n                            opacity=\"0.5\"\n                            fill={`${colorScale(getTime(item))}`}\n                          >\n                            <title>\n                              {date.getFullYear()}/\n                              {(date.getMonth() + 1)\n                                .toString()\n                                .padStart(2, \"0\")}\n                              /{date.getDate().toString().padStart(2, \"0\")}-\n                              {date.getHours().toString().padStart(2, \"0\")}\n                            </title>\n                          </circle>\n                        </g>\n                      );\n                    })}\n                  </g>\n                </g>\n                <g\n                  transform={`translate(${margin.left}, ${\n                    margin.top + contentHeight + 25\n                  })`}\n                >\n                  {colorScale.ticks().map((item, i) => {\n                    const date = new Date(item);\n                    return (\n                      <g key={i} transform={`translate(${90 * i}, ${0})`}>\n                        <circle\n                          r=\"3\"\n                          opacity=\"0.5\"\n                          fill={`${colorScale(item)}`}\n                        ></circle>\n                        <text dominantBaseline=\"central\" fontSize=\"12\" x=\"5\">\n                          {date.getFullYear()}\n                          {(date.getMonth() + 1).toString().padStart(2, \"0\")}\n                          {date.getDate().toString().padStart(2, \"0\")}\n                        </text>\n                      </g>\n                    );\n                  })}\n                </g>\n              </svg>\n            </div>\n          </div>\n          <div className=\"column\">\n            <button\n              className=\"button is-rounded is-fullwidth\"\n              onClick={function () {\n                setLockTag(false);\n                var timeData = new Date();\n                // console.log(timeData);\n                setTimeData(timeData);\n              }}\n            >\n              unlock\n            </button>\n            {/* <section className=\"section\"> */}\n            <div className=\"container\">\n              {/* <div className=\"column\"> */}\n              {timeData.length === 0 ? (\n                <div className=\"container\">\n                  <AllWordPlot />\n                </div>\n              ) : (\n                <div className=\"container\">\n                  <WordPlot\n                    timeData={timeData}\n                    windowSize={windowSize}\n                    clusterList={clusterList}\n                  />\n                </div>\n              )}\n            </div>\n            {/* </div> */}\n            {/* </section> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst AllWordPlot = () => {\n  const [allWord, setAllWord] = useState([]);\n  useEffect(() => {\n    fetch(\"dbscan_word_coordinate.json\")\n      // fetch(\"test.json\")\n      .then((response) => response.json())\n      // .then((text) => console.log(text));\n      .then((allWord) => {\n        const xScale = d3\n          .scaleLinear()\n          .domain([\n            d3.min(allWord, (item) => item.x),\n            d3.max(allWord, (item) => item.x),\n          ])\n          .range([0, contentWidth])\n          .nice();\n\n        const yScale = d3\n          .scaleLinear()\n          .domain([\n            d3.max(allWord, (item) => item.y),\n            d3.min(allWord, (item) => item.y),\n          ])\n          .range([0, contentHeight])\n          .nice();\n\n        // console.log(\"then allWord = \" + JSON.stringify(allWord));\n        for (const item of allWord) {\n          item.x = xScale(item.x);\n          item.y = yScale(item.y);\n          item.size = Math.log(item.count) * 5;\n        }\n        d3.forceSimulation(allWord)\n          .force(\n            \"collide\",\n            d3\n              .forceCollide()\n              .radius(function (d) {\n                return d.size;\n              })\n\n              .strength(0.01)\n              .iterations(30)\n          )\n          .force(\"charge\", d3.forceManyBody().strength(1))\n          .force(\"center\", d3.forceCenter())\n          .on(\"end\", () => {\n            const s = contentWidth;\n\n            const xMin = d3.min(allWord, (item) => item.x - item.size);\n            const xMax = d3.max(allWord, (item) => item.x + item.size);\n            const yMin = d3.min(allWord, (item) => item.y - item.size);\n            const yMax = d3.max(allWord, (item) => item.y + item.size);\n            // console.log(\"xMin\" + xMin);\n            // console.log(\"xMax\" + xMax);\n            // console.log(\"yMin\" + yMin);\n            // console.log(\"yMax\" + yMax);\n\n            const lMax = Math.max(-xMin + xMax, -yMin + yMax);\n\n            const cx = xMin + lMax / 2;\n            const cy = yMin + lMax / 2;\n\n            // const l = Math.max(-xMin, xMax, -yMin, yMax) * 2;\n\n            // for (const item of allWord) {\n            //   item.x = (item.x * s) / l + s / 2;\n            //   item.y = (item.y * s) / l + s / 2;\n            //   item.size = (item.size * s) / l;\n            // }\n\n            for (const item of allWord) {\n              item.x = ((item.x - cx) / lMax) * s + s / 2;\n              item.y = ((item.y - cy) / lMax) * s + s / 2;\n              item.size = (item.size * s) / lMax;\n            }\n\n            setAllWord(allWord);\n          })\n          .tick(300)\n          .stop();\n        // console.log(allWord);\n        // setAllWord(allWord);\n      });\n  }, []);\n\n  const contentWidth = 800;\n  const contentHeight = 800;\n\n  // console.log(allWord);\n\n  const margin = {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n  };\n\n  const width = contentWidth + margin.left + margin.right;\n  const height = contentHeight + margin.top + margin.bottom;\n\n  // const color = d3.scaleOrdinal(d3.schemeAccent);\n\n  const color = (d) => {\n    if (d === \"red\") return \"lightgray\";\n    else return d;\n  };\n\n  // const circleSize = (d) => Math.pow(d.count, 0.7);\n  const circleSize = (d) => d.size;\n\n  // const countMax = d3.max(words, (item) => item.count);\n  // const countMin = d3.min(words, (item) => item.count);\n\n  const circleScale = d3\n    .scaleLinear()\n    .domain([\n      d3.min(allWord, (item) => item.count),\n      d3.max(allWord, (item) => item.count),\n    ])\n    .range([0.5, 1])\n    .nice();\n\n  // console.log(countMin);\n\n  const circleOpacity = (d) => circleScale(d.count);\n  // 对数log处理 ， 透明度\n\n  // const circleSize = (d) => d.count;\n\n  return (\n    <div className=\"container\">\n      <div className=\"container has-text-centered\">\n        <h3 className=\"title is-4\">All Time Word</h3>\n      </div>\n      <div className=\"container\">\n        <div className=\"box\">\n          <svg viewBox={`0 0 ${width} ${height}`}>\n            <g transform={`translate(${margin.left}, ${margin.top})`}>\n              {allWord.map((item, i) => {\n                return (\n                  <g\n                    key={i}\n                    transform={`translate(${item.x}, ${item.y})`}\n                    // style={{ cursor: \"pointer\" }}\n                  >\n                    <title>{`${item.word}`}</title>\n                    <circle\n                      r={`${circleSize(item)}px`}\n                      fill={color(item.color)}\n                      opacity={circleOpacity(item)}\n                      // fill={item.color}\n                    />\n                    <text\n                      fontSize={`${circleSize(item) * 0.6}px`}\n                      textAnchor=\"middle\"\n                      dominantBaseline=\"central\"\n                    >\n                      {item.word}\n                    </text>\n                  </g>\n                );\n              })}\n            </g>\n          </svg>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n//////////////////////////\nconst WordPlot = ({ timeData, windowSize, clusterList }) => {\n  const [words, setWords] = useState([]);\n\n  // // console.log(\"timeData = \" + timeData);\n  if (windowSize.length === 0) windowSize = 5;\n\n  console.log(\"windowSize = \" + windowSize);\n\n  const cDate = new Date(timeData);\n  // const windowSize = 5;\n\n  // useEffect(() => {\n  //   fetch(timeData)\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       setData(data);\n  //     });\n  // }, [timeData]);\n\n  useEffect(() => {\n    const chackTime = (date) => {\n      const startDate = new Date(\"2019/12/17 10:00\");\n      const endDate = new Date(\"2020/03/31 23:00\");\n\n      if (\n        date.getTime() >= startDate.getTime() &&\n        date.getTime() <= endDate.getTime()\n      ) {\n        return 1;\n      } else return 0;\n    };\n\n    const jsonUrl = (date) => {\n      var year = date.getFullYear();\n      var month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n      var day = date.getDate().toString().padStart(2, \"0\");\n\n      var newDate = `${year}${month}${day}`;\n      var hour = date.getHours().toString().padStart(2, \"0\");\n      var path = `./dbscan_word_coordinate_by_hour/${newDate}/${newDate}_${hour}.json`;\n      return path;\n    };\n\n    const formatJsonUrl = (date) => {\n      var year = date.substring(0, 4);\n      var month = date.substring(5, 7);\n      var day = date.substring(8, 10);\n      var hour = date.substring(11, 13);\n\n      var newDate = `${year}${month}${day}`;\n      var path = `./dbscan_word_coordinate_by_hour/${newDate}/${newDate}_${hour}.json`;\n      return path;\n    };\n\n    const date = new Date(timeData);\n    const urls = [];\n\n    if (chackTime(date)) {\n      // console.log(\"safe \" + date);\n      urls.push(jsonUrl(date));\n      if (windowSize < 0) {\n        // console.log(\"test\");\n\n        for (const date of clusterList) {\n          urls.push(formatJsonUrl(date));\n        }\n      } else {\n        for (let i = 1; i <= windowSize; ++i) {\n          const d1 = new Date(date.getTime() + 3600000 * i);\n          if (chackTime(d1)) {\n            urls.push(jsonUrl(d1));\n          }\n          const d2 = new Date(date.getTime() - 3600000 * i);\n          if (chackTime(d2)) {\n            urls.push(jsonUrl(d2));\n          }\n        }\n      }\n    }\n\n    console.log(urls);\n\n    const requests = urls.map((url) => {\n      return fetch(url).then((response) => response.json());\n    });\n\n    console.log(\"reqs = \" + requests);\n\n    Promise.all(requests)\n      .then((data) => {\n        console.log(\"data = \" + data);\n        const words = {};\n        for (const dateItems of data) {\n          for (const item of dateItems) {\n            // // // console.log(\"item.word = \" + item.word);\n            if (!(item.word in words)) {\n              words[item.word] = {\n                word: item.word,\n                count: 0,\n                total_count: item.total_count,\n                color: item.color,\n                x: item.x,\n                y: item.y,\n              };\n            }\n            words[item.word].count += item.count;\n          }\n        }\n        // console.log(\"words = \" + JSON.stringify(words));\n\n        var newWords = [];\n\n        for (const item in words) {\n          newWords.push(words[item]);\n        }\n\n        // console.log(\"newWords = \" + JSON.stringify(newWords));\n\n        return newWords;\n      })\n      .then((words) => {\n        const xScale = d3\n          .scaleLinear()\n          .domain([\n            d3.min(words, (item) => item.x),\n            d3.max(words, (item) => item.x),\n          ])\n          .range([0, contentWidth])\n          .nice();\n\n        const yScale = d3\n          .scaleLinear()\n          .domain([\n            d3.max(words, (item) => item.y),\n            d3.min(words, (item) => item.y),\n          ])\n          .range([0, contentHeight])\n          .nice();\n\n        console.log(\"words = \" + JSON.stringify(words));\n        // for (const item of words) {\n        //   console.log(JSON.stringify(item));\n        // }\n        for (const item of words) {\n          item.x = xScale(item.x);\n          item.y = yScale(item.y);\n          item.size = Math.log(item.count) * 50;\n          // console.log(\"item.size = \" + item.size);\n        }\n        d3.forceSimulation(words)\n          .force(\n            \"collide\",\n            d3\n              .forceCollide()\n              .radius(function (d) {\n                return d.size;\n              })\n\n              .strength(0.01)\n              .iterations(30)\n          )\n          .force(\"charge\", d3.forceManyBody().strength(1))\n          .force(\"center\", d3.forceCenter())\n          .on(\"end\", () => {\n            const s = contentWidth;\n\n            const xMin = d3.min(words, (item) => item.x - item.size);\n            const xMax = d3.max(words, (item) => item.x + item.size);\n            const yMin = d3.min(words, (item) => item.y - item.size);\n            const yMax = d3.max(words, (item) => item.y + item.size);\n            // console.log(\"xMin\" + xMin);\n            // console.log(\"xMax\" + xMax);\n            // console.log(\"yMin\" + yMin);\n            // console.log(\"yMax\" + yMax);\n\n            const lMax = Math.max(-xMin + xMax, -yMin + yMax);\n\n            const cx = xMin + lMax / 2;\n            const cy = yMin + lMax / 2;\n\n            // const l = Math.max(-xMin, xMax, -yMin, yMax) * 2;\n\n            // for (const item of allWord) {\n            //   item.x = (item.x * s) / l + s / 2;\n            //   item.y = (item.y * s) / l + s / 2;\n            //   item.size = (item.size * s) / l;\n            // }\n\n            for (const item of words) {\n              item.x = ((item.x - cx) / lMax) * s + s / 2;\n              item.y = ((item.y - cy) / lMax) * s + s / 2;\n              item.size = (item.size * s) / lMax;\n            }\n\n            setWords(words);\n          })\n          .tick(300)\n          .stop();\n      });\n  }, [timeData, windowSize, clusterList]);\n\n  const contentWidth = 800;\n  const contentHeight = 800;\n\n  // // console.log(words);\n\n  const margin = {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n  };\n\n  const width = contentWidth + margin.left + margin.right;\n  const height = contentHeight + margin.top + margin.bottom;\n\n  // const color = d3.scaleOrdinal(d3.schemeAccent);\n\n  const color = (d) => {\n    if (d === \"red\") return \"lightgray\";\n    else return d;\n  };\n\n  // const circleSize = (d) => Math.pow(d.count, 0.7);\n  const circleSize = (d) => d.size;\n\n  // const countMax = d3.max(words, (item) => item.count);\n  // const countMin = d3.min(words, (item) => item.count);\n\n  const circleScale = d3\n    .scaleLinear()\n    .domain([\n      d3.min(words, (item) => item.count),\n      d3.max(words, (item) => item.count),\n    ])\n    .range([0.5, 1])\n    .nice();\n\n  // console.log(countMin);\n\n  const circleOpacity = (d) => circleScale(d.count);\n\n  // const xScale = d3\n  //   .scaleLinear()\n  //   .domain([d3.min(words, (item) => item.x), d3.max(words, (item) => item.x)])\n  //   .range([0, contentWidth])\n  //   .nice();\n\n  // const yScale = d3\n  //   .scaleLinear()\n  //   .domain([d3.max(words, (item) => item.y), d3.min(words, (item) => item.y)])\n  //   .range([0, contentHeight])\n  //   .nice();\n\n  return words.length === 0 ? (\n    <div className=\"container\">\n      <AllWordPlot />\n    </div>\n  ) : (\n    <div className=\"container\">\n      <div className=\"container has-text-centered\">\n        <h3 className=\"title is-4\">\n          {cDate.getFullYear()}/\n          {(cDate.getMonth() + 1).toString().padStart(2, \"0\")}/\n          {cDate.getDate().toString().padStart(2, \"0\")}-\n          {cDate.getHours().toString().padStart(2, \"0\")} window = {windowSize}\n        </h3>\n      </div>\n      <div className=\"container\">\n        <div className=\"box\">\n          <svg viewBox={`0 0 ${width} ${height}`}>\n            <g transform={`translate(${margin.left}, ${margin.top})`}>\n              {words.map((item, i) => {\n                return (\n                  <g\n                    key={i}\n                    transform={`translate(${item.x}, ${item.y})`}\n                    // style={{ cursor: \"pointer\" }}\n                  >\n                    <title>{`word:${item.word}`}</title>\n                    <circle\n                      r={`${circleSize(item)}px`}\n                      fill={color(item.color)}\n                      opacity={circleOpacity(item)}\n                      // fill={item.color}\n                    />\n                    <text\n                      fontSize={`${circleSize(item) * 0.6}px`}\n                      textAnchor=\"middle\"\n                      dominantBaseline=\"central\"\n                      // visibility=\"hidden\"\n                    >\n                      {item.word}\n                    </text>\n                  </g>\n                );\n              })}\n            </g>\n          </svg>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import \"bulma/css/bulma.css\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\n\nrender(<App />, document.querySelector(\"#content\"));\n"],"sourceRoot":""}